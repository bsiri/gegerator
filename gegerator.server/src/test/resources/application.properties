#
#  About the random database name:
#
#  Spring behavior is to run schema.sql everytime it creates a new Context. It is run against
#  the memory instance of h2, which runs until the JVM exits.
#
#  It's all fine if only one TestSuite class is run in the IDE, but problems arise if many
#  are executed (eg, mvn test). When many TestSuite are run, a new context is created,
#  thus run schema.sql again on the same existing H2 instance, and thus leads to a redundant
#  initialization error ("table already exists").
#
#  To prevent this from happening, the best course was to use random database names.
#
#  Other solutions proposed by the community :
#  - use Liquibase or Flyway, which can detect and avoid double-execution of DDL instructions,
#    probably the most advanced and reliable (also more complex)
#  - switch spring.datasource.continueOnError=true to ignore DDL errors (a bit dirty).
#  - set the H2 connection option DB_CLOSE_ON_EXIT=True, however this induces different failures
#    (see https://stackoverflow.com/questions/15613722/spring-s-embedded-h2-datasource-and-db-close-on-exit)
#  - try to fiddle with ContextHierarchies and see if the Datasource can be created once and
#    shared among all tests.

spring.r2dbc.name=gegerator-${random.int(1000)}